<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于一道历史作业题的物理延申</title>
    <link href="/2024/02/22/%E5%85%B3%E4%BA%8E%E4%B8%80%E9%81%93%E5%8E%86%E5%8F%B2%E4%BD%9C%E4%B8%9A%E9%A2%98%E7%9A%84%E7%89%A9%E7%90%86%E5%BB%B6%E7%94%B3/"/>
    <url>/2024/02/22/%E5%85%B3%E4%BA%8E%E4%B8%80%E9%81%93%E5%8E%86%E5%8F%B2%E4%BD%9C%E4%B8%9A%E9%A2%98%E7%9A%84%E7%89%A9%E7%90%86%E5%BB%B6%E7%94%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h1><p>我国的农业技术不断发展。<br>如图是直辕犁和曲辕犁，对它们受力分析，可以发现古人蕴含的无限智慧。<br>观察图片，如果曲辕犁和直辕犁的重力均为$G_{0}$且均在平直路面上，回答下列问题。<br>（1）（使用提供的数据作答）曲辕犁如果做匀速直线运动，</p><ul><li>①求曲辕犁受的支持力</li><li>②求曲辕犁受的摩擦力</li></ul><p>（2）若曲辕犁和直辕犁都做匀速直线运动，且与地面的动摩擦因数均为$\mu$.</p><ul><li>$\alpha$和$\beta$满足什么数量关系时，曲辕犁更省力？</li></ul><p>（3）结合以上材料，自选角度，自拟观点，结合材料和所学知识加以论述。（要求：观点明确，史论结合，逻辑清晰）<br>————挖坑 未完待续————<br><img src="/2024/02/22/%E5%85%B3%E4%BA%8E%E4%B8%80%E9%81%93%E5%8E%86%E5%8F%B2%E4%BD%9C%E4%B8%9A%E9%A2%98%E7%9A%84%E7%89%A9%E7%90%86%E5%BB%B6%E7%94%B3/qyl.png" alt="qyl"></p>]]></content>
    
    
    
    <tags>
      
      <tag>物理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于广州市越秀区2024九上数学期末考25的解析</title>
    <link href="/2024/01/20/%E5%85%B3%E4%BA%8E%E5%B9%BF%E5%B7%9E%E5%B8%82%E8%B6%8A%E7%A7%80%E5%8C%BA2024%E4%B9%9D%E4%B8%8A%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%AB%E8%80%8325%E7%9A%84%E8%A7%A3%E6%9E%90/"/>
    <url>/2024/01/20/%E5%85%B3%E4%BA%8E%E5%B9%BF%E5%B7%9E%E5%B8%82%E8%B6%8A%E7%A7%80%E5%8C%BA2024%E4%B9%9D%E4%B8%8A%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%AB%E8%80%8325%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如图，四边形$ABCD$中，$AB&#x3D; CD$，$\angle ABC+ \angle BCD&#x3D; 270°$</p><p>（1）求$\angle A+ \angle D$<br>（2）连接$AC$,若$\angle ACB&#x3D; 45°$,求证： $BC^{2} +2AC^{2} &#x3D;AD^{2}$<br>（3）点$E$，$F$分别为线段$BC$和$AD$上的点，点$G$是线段$EF$上任意一点且$\triangle GAB$和$\triangle GCD$的面积相等，过点$D$作$DH \perp EF$，$DH$交直线$EF$于点$H$，连接$AH$。若$AD&#x3D; 4$，求$AH_{min}$</p><div id="ggb1" style="height:600px; width:800px; font-size:0">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</div>## 第一问瞪眼法秒了，$90°$<h2 id="第二问"><a href="#第二问" class="headerlink" title="第二问"></a>第二问</h2><p>既然$AB&#x3D; CD$，而且$\angle BAD+ \angle D&#x3D; 90°$，那么我们不妨把$\triangle ACD$挪走。</p><ul><li><p>辅助线①号：把$AD$绕点$A$逆时针旋转$90°$得$AF$，连接$BF$<br>这时，易证：$\triangle A D C  \cong \triangle A B F$</p><div id="ggb2" style="height:600px; width:800px; font-size:0"></div>然后呢？图里有一个等腰！（$\triangle ADF$）一个等腰，一个$45°$，手拉手出来了吧。</li><li><p>辅助线②号：把$C$点绕$A$逆时针旋转$90°$得到点$G$，连$GC$，$AG$，$GF$，$BG$与$AF$交于$E$<br>此时，易证：$G$，$B$，$C$共线；$\triangle A D C  \cong \triangle A F G$</p></li></ul><p>这时有▱$ABFG$。</p><p>然后开始设元暴证！</p><ul><li>辅助线③号：作$AI \perp GC$于$I$<br>设$GE&#x3D; EB&#x3D; a$，$BC&#x3D; b$<br>$$<br>GI&#x3D; IC&#x3D; \frac{2a+b}{2}<br>$$<br>$$<br>AC&#x3D; \frac{\sqrt{2} (2a+b)}{2}<br>$$<br>$$<br>AD&#x3D; AF&#x3D; 2AE&#x3D; 2\sqrt{IE^2+ AI^2}&#x3D; …&#x3D;  \frac{4}{4}<br>$$<br>$$<br>BC^2+ 2AC^2&#x3D; b^2+ (2a+ b)^2&#x3D;<br>$$</li></ul><script src="https://cdn.geogebra.org/apps/deployggb.js"></script><script src="https://kz16.top/geogebra/ggbmd.js"></script> ]]></content>
    
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于广州市番禺区2024九上数学期末考24的解析</title>
    <link href="/2024/01/20/%E5%85%B3%E4%BA%8E%E5%B9%BF%E5%B7%9E%E5%B8%82%E7%95%AA%E7%A6%BA%E5%8C%BA2024%E4%B9%9D%E4%B8%8A%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%AB%E8%80%8324%E7%9A%84%E8%A7%A3%E6%9E%90/"/>
    <url>/2024/01/20/%E5%85%B3%E4%BA%8E%E5%B9%BF%E5%B7%9E%E5%B8%82%E7%95%AA%E7%A6%BA%E5%8C%BA2024%E4%B9%9D%E4%B8%8A%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%AB%E8%80%8324%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>MN是圆O上的一条不经过圆心的弦，MN&#x3D;4，在劣弧MN和优弧MN上分别有点A，B（不与M，N重合），且$\stackrel\frown{AB}$&#x3D;$\stackrel\frown{BN}$，连接$AM$ ，$BM$．</p><p>（3）如图，连接$AN$，$BN$，试猜想$AM·MB+AN·NB$的值是否为定值，若是，请求出这个值.</p><div id="ggb3" style="height:600px; width:800px; font-size:0">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</div><h2 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h2><p>$AM·MB+AN·NB$？熟不熟悉？是否想到托勒密定理？</p><p>是的，这就是类似托勒密的一种特殊情况。<br>记得托勒密怎么证的吗？就是做角等。<br>好家伙，题面上不就有角等吗？！！（$\stackrel\frown{AB}$ &#x3D; $\stackrel\frown{BN}$）</p><p>思路清晰了吧。<br>连接$AB$交$MN$与H</p><div id="ggb2" style="height:600px; width:800px; font-size:0">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</div><p>$$<br>\because  \stackrel\frown{AB}&#x3D;\stackrel\frown{BN}<br>$$<br>$$<br>\therefore \angle AMN&#x3D;\angle NMB<br>$$<br>$$<br>\therefore \triangle MAN\sim \triangle MHB,\triangle MAN\sim \triangle AHN<br>$$<br>$$<br>\frac{AM}{MH}&#x3D;\frac{MN}{BN},\frac{AN}{MN}&#x3D;\frac{NH}{AN}<br>$$<br>$$<br>AM·BN&#x3D;MN·MH,AN^{2}&#x3D;MN·NH<br>$$<br>$$<br>AM·BN+AN·BN&#x3D;AM·BN+AN^{2}&#x3D;MN·MH+MN·NH&#x3D;MN·(MH+NH)&#x3D;MN·MN&#x3D;MN^{2}&#x3D;16<br>$$</p><div id="ggb1" style="height:600px; width:800px; font-size:0">UEsDBBQAAAAIAMJaNli+FE6xLwUAAIAmAAAXAAAAZ2VvZ2VicmFfZGVmYXVsdHMyZC54bWztWl9z4jYQf+59Co+e2oeAbXCATJwb7mY6zUwud9NkOn0VtjBqjORacjD59F1JxhYHJDkgCaTHA/LK+vv7rVa7ks8/ltPUuSe5oJyFyGu5yCEs4jFlSYgKOT7po48XH84TwhMyyrEz5vkUyxAFqmRdL2j5rb7vqjycZSESBZUEOaIYDZUItadE5nPkZCmWqokQzZDjlIKeMX6Np0RkOCI30YRM8RWPsNStTqTMztrt2WzWWvTf4nnShi5EuxRxO0lkC1LkwCSYCFH1cAbtLtWedXQ933W99t9frkw/J5QJiVkE44QJxmSMi1QKeCQpmRImHTnPSIgyTplETopHJA3RNyU5v45zQn5DTlUJcHPRxYdfzsWEzxw++odEkCfzApqu6mmhrcrA68885bmTh8j3kAMwey6kI0gHPuCXZhMcIteUTvGc5M49hiaqHFxIHukGdO4Yp6JqWXf1hcfEvOlW5RkFwgBPR0gCXLgt6ExkhMTQIaomCQ/AzFyTbrWo535DH6oWAztXztMquxpYxHkeC6cM0TW+Rs68Sh9MCkXO2xWyz8M4JhlhMRRaAtrbCuhBTwOtEsBZJT9hfhTm0yOBed8gw0J+AZS/Mhtb/6et2C+8l+xPksCobZA7RwPyUUC8rMHddwiuxsvAKNR/iCI+zVJSvi72KWUNjldaqHH3t/MywCmDqcI/gK4ctLcwGtDvOtDVbA18ckKjO0YEeHGBVUk9/EFj2J90YxzcRCoBT6/XNy2Qf9kSaRQ4o1BmZyLGBYvUrGpwPxf5vc1Gp+u+BR9Nm1uvgH2T4bu6781YCpIoqcblZiE3qr2dX/e/Um1S2qrNC5mqTi+ZhCgMAINhipV53RGS3UJHX9ltjplQodf3agRBUG7bsIqTagyssomrr3ZYWzmGUHCzLgTHoAvvUBP2YC3ZPc5rnmxOt/PHbE79ADBbsNoCJXljYn9g67CB2M53ei/KvZMSnW5nGNT2tBa9Vu+AlegepscbGP6qxMb9OApn8DWt5BoPHnY2IihmewiJ0nlirehvC7nmo2f42NWJeoxRC63nxlUtzzU/rztwPe8UDh/e3Dd6HOWlAEjBbDIanI2nuLu6HPjK2QeeEWc0agIYI9VIdo/CghxSOEloQpgxzGBGXN3GHBJo+UFJ6v6j9LQ8hwTePqgEsnV1mFdOS2doagxNwaFvko5JuiYJKvye4DYDA2d50t9tEd3tgqrDsCevF7c+xfre/OtDUh9WTEluGYfrhVxrT2DMA8yhWD7dEimNgewpBThPAOcphh1V+eYjwdNCwjUe3I6x5hrPqNyMxnKiMIfxjWmpiDXoOROe0wfOZA2WozR2mOoLv6UDj3VEg3Ju9jWfZbk26fRmDbZ0dTcDjVmSNstxaKSGAXNToAutHjI+TgwMRPNy2vL7Ha8fdNye1xsE/dNn8uT1G57Mi91o2rQegb7GCgedCt88ao5awdF9FSar3cb1et2g4w/8wBsMuvAAI993PPh7ndHENod4lqj5Xyn6YseEKY8K0Rx+G6lGCBRyK/f4YCMeXJQ0pTifr/a0ox+zGWJJysZhuNWC9RHDATqEm6cCsCfN0C6NZH0oYCYzpoAigy9M4CRBd0LZJxzdJTkvWKXa1gj2M/Vq6znEU4UR5ymBeHgxrU8L2bqeXtn3NwFU7d+PO5N9DZFKAKMOjHvfCxA+5onuRrxc2q2euGMTzSK40oJ1cbxmETxnokYV1BpaVoaTF9OGF4yMdJ0fuvJc66TYFLStL6zai8+5Lv4DUEsDBBQAAAAIAMJaNlgoUO8UdAMAAFsRAAAXAAAAZ2VvZ2VicmFfZGVmYXVsdHMzZC54bWztmM1u2zgQgM/bpyB4r/VjyYmCKIXRPewCbdFFL3ulpbHNXYlUScqy8mp9hz5Thz9J5DZpm8BNkaI+ePijmRG/GY1Inb/Ytw3ZgdJcipIms5gSEJWsudiUtDfr56f0xcWz8w3IDawUI2upWmZKmtsrr/XyWTo7TWM7xrqupLrnBijR/Wppu6jdglEjJV3DjDVR0oESstf8TMg3rAXdsQreVVto2StZMeOsbo3pzqJoGIbZlf+ZVJsIXehor+toszEzlJTgIoQuaWicod0D7WHu9NI4TqJ/X7/yfp5zoQ0TFd4nLrCGNesbo7EJDbQgDDFjByWtpODVHH00bAVNSf8WBlcNlb1FUvVqh/pBuaTzJI/pxbM/zispVa2J3JcUmcjRi0svBgSN8Pzczs/t/NzgBwc/OLjByBrUWzkQufoPHZfUqB69hhtyHXcNTr+UjVRElTRFDxjBJEa5QlmkGJqm2zK0OEti/0uyIk6SRZJ6/YaNoMiOodHglfVGVs6kG12zRgdfzvlrWYOfycL1gmN2WDLaAAYenesOoHYtzxOXhUkwuvya2uMC3pmxAWK2vPpfgMZ45hMl2/iL1zXYNPU68F54FW3/S9oxhalkFK/CPN+A2CExqTTZx+4mRhRo7dL2bLruE9cfUeDspRU47NRxJYrvydJrLP2Fy9SLuReZF3kgdh6F5Pkijdie6/mf10Fbhu4kc+K5y5z7BhrdI0n8xyjbxy/E+EdFFJPnZ8WUhDbgqj9++Dpu92BWTBnQnInJ4/vSTnxOfvEUyP9I7neDRPsCJvzeuv4BPyyrD+JXFA5gmqBEhE5el6j8WBjXzL7Lgok7K99txAKouzI1lHhfsH29DjX8m8Wgk824hVpJccN1MnSDdh7QPuRJOuobIwvc8mIRZ4vsaNF5aJLfi+1SVVveQg3sEC5G//HgerrZiYNrxa/B9u2INZljfZhyfcyk9UWk8FzTSR1+4lwV1+0h1eQRqS58afZUC+w9QaoCzPU639j2tK7mv+vq/Wi+71ntdmFhsf9c9adUfYoeszgussL+ThZJfppkyPJIgI6xN+Vt1/CKm+86bdx61rCD/kAxenGJIni77/GDLBdenHhx6kXxzd2I7tUaT9+37ZbD1GGQs4cFGfVu3S/PTr43628MP8qOear01R1zNPl4EF19qbj4BFBLAwQUAAAACADCWjZY1je9uRkAAAAXAAAAFgAAAGdlb2dlYnJhX2phdmFzY3JpcHQuanNLK81LLsnMz1NIT0/yz/PMyyzR0FSorgUAUEsDBBQAAAAIAMJaNlg8dqJsIgsAAFc3AAAMAAAAZ2VvZ2VicmEueG1s7VvbcuM2En1OvgKl55girgRSclKevEyq5pJaZ7e29mWLkmCJMUVqRcqWp/Ib+wv7sJ+wP5Tf2NMAdRv5MvJMOZOMZ0yDBJsAuvv0BU168P1qVrIrv2iKujrt8STtMV+N6nFRTU57y/bixPa+/+7rwcTXEz9c5OyiXszy9rSniXLznE5EYkVKffl8ftprlkXre6xZDs/oEk/PfLu46bF5mbc0xGnvuseK8WkvHSot3EieOCfliboYmRMrh/pk6POxUc6MxtL2GFs1xbdV/Saf+Waej/z5aOpn+at6lLdh/mnbzr/t96+vr5P1SpN6MeljMU1/1Yz7k8kwQdtjYLdqTnvdybcYd+/paxmeE2nK+39//SrOc1JUTZtXI3BEolgW33391eC6qMb1Nbsuxu0UgtMm67GpLyZTCIcLDkn0iWwOEc39qC2ufIOHdy4D++1s3gtkeUX3v4pnrNxw1mPj4qoY+wVElQgldMq10yrVQgoneqxeFL5qO2LeTdpfDze4Kvx1HJfOwpQqdVjqVdEUw9Kf9i7ysgFjRXWxgHQ31017U/phjmnbxRLX2xXxb8J/kBTvQK9SsBqFgXtp+g0dGQ6tOxnszK05ltzWdRlGTtmvjDNwxDTjjn3DTIYewbhmCj0WPRmT1Ke5YpIRCZdMKbSKurnBHbqN35iOcY47TKRMCCY4ExKXWjMNsoyeFaA1LoyX4iBqrAiHpD4pcYQ+qXAIOsNAkHToy3CYcKbDb0vPYBaN+X5l4Rb6lMN01KEzziRWgussZRgXw2PFgRuVMvrhTNEkImPCsjBqGD+FjD5cPV3He/pZa0ffph2DI6jtPe2ofd1AFSl4wwJTsBkaCJB6oTG6TEkwaAITaUpqQaMjDRikSzAZmkgTVIdGfiyHa/7kMfzBkWz4Ax0hBw2BAo1ktG6cYP3UqO7SxMsAtxSwib2kfDTAEhD1kcxAGI9gBiLYzBpN9JhJ11NynuH8Q+fcBebRc27ZtBi5zYenvZ/fvn11fjg9nNztLH+kpG+VM+YKP+E4mFIeZYsHrvIRMxpY4adgUpGUP2xKLmAZTzxnRhg4dDaxhWWG9tMI3z0g/EF/HSUH3YpYMyXaDuKtnyFjSFmWsUwyE/xFiFoIV3DXMXRlgmWaZeQt1gEMAccyQ20XxSiG2b0opinG7YQyQ50IF+RcWIhCMaYJtQ5rOA+BjYLefmBDBFLbIIQF0lCcMYROZshfddEIqxCbeCSwfIQfwxCztGCGfOIdoQnJW90UG9lOfYnMrtNCEGNRzZftnuhGM0pxwmlbgzovQ2rW0Y/r0eWLjbC7kXzeIIHaDotcZpsyxdxmL6P6alDmQ18iXT0nJDB2lZfka8IMF3XVsrWnM9Q36If0beCXo7IYF3n1N6h+nSi9Wc6GfgHI4bQmJsMg9Djb5HnBX+7leYFoVNeL8flNA6yw1T/8gh6XUiQZV8CZFc5Y2NhNd4fbDLlcKqVVnDI64LwZ5YRyKxKTOSms1E5mOoXUb+64pePM/urcty34b1i+8gBqJ7vJgsxs5+LH5kVdbrvmdVG1P+TzdrkIuT7c84K4OqsmpQ+yDGpGAjy6HNar8yBEgfXQWD/fzMmrxRUMJz/UZb1gsEGhNQi6Fg6e2kBDS9tQSeSfNCMa0KAJJDTuhoRTbgua0IKI2kAFTcfVddxiiZHTThH5qmjixgIy3QVWgAnl08uqaF+tL9pidLlllh6IIMDIAbf7Y3YkHz/moP8eAAedaazhOKvHfgfKg/7e/cGlX1S+jMCroPxlvWwieVxZWPay8T/l7fSsGv/FT2C2P+XkOVssJJJuGRz7UTHDg7G/w31OQPgrGIu9Yz9Z+LVA4mKiHrpVsma+wJ6tmXoPy9gziy1Z6B7018sfIAsofYgJswJuBTqb5auou9bDYUT6ZrQo5gRxNoR7v/RbEI+LhkbYdBA1JNKANTiIuoIuWtKDUL/9+7+//ed/AsE1X7bTGhDD03mLe9h/DXzpZ9hGsTbgOpjGRrtvwwaN1Mjq4S9wPJtQE+9vxYjbW0sgYFJKg7bDL8vL+TTfyKbMb8jZbMTSebLXG82vEV1BN4GZTiYJoWruiWucxSXjBFvrm2DJOxAInJDpxhE7Y4y972mlU1bDIP8TLhLF0yyD83JpxrUi50WOK4EzSzOTOicEJ2m+6/ACREcZBg3MZnk1ZlUI1D8Ui1HpgxBjhMhTEirL+caD1Mt2fWMUB+uGOFANlFuMNqIfPaCaHUns6gbwgpjwG4qhisWj1LJ1RO0UBo/9NuwbXi+uk7IbnLwsxmMf42WNukXRkhAz23nuf1VxgJDDoGiCqFZcgL14t5j46go81bDXFSSDMW7QYOR3dEW1lhVEiOYGDe6+owbd4XFAZlGs2Fl88CxSnAly4SYRKSILwhPHRQolnskwzpmikHao+TNNkDjQ/b1a/ynY0L7SO852tH12v7b3DfHsyzTEzDipRSYFFGKJG8KQTJw12jhhNbbYwkBLD1vih+nk9TE6ef0l6gTVTtiBE1o6aZ1IEfxIJyJJnUxtplD7sNqS5Xwqnbw5RidvvkCduMRQyYlLp7TNtN6ohKfOgicpJSp6Dunrwyo59xPqf08pr2PECprY083kft003Whr6U/+VDHLr+ZlAZqNVEpS6Y8VZZm0R0MudpCXXno/pw3E2+rnRV419Drg/YQU5fbFrsLH/iJflt0svtpNKfdu7SACLyO4yYTIUCY3mVKZdQETOgFAhONcoVrBDbgHIk5MhvcX3HGFO8Ki+vcYiJxFiAQHugeRi+MgcvEMkaeACE+sk8pya1OntRLk+cDICTIgaaV0SHaEs9LCEQIi2ibCCq2MscqB3nT1hOMg8iZCJOQ9exD55TiI/PIMkSfxIsBIZjLtuObGZg7+JGJEJlxZhxdHVImRyL8QcAASegWa2VQYpQ0XTkeGj9wb3YmR8TF7o/EhQvarFn8siDzR5kho5NscxbWUO4V8Yn9zdEuWEfdGh3nGvWrfIPsg8Quax2vqnBZzAIAXx6SBLx6VBtK7YeifGgCAmsch4NHJdZoYmVmhuHVGwinHqG0RtWFXwdbw4vbDcut7E7kgyz3pTo9zwdNnF/wULlgmZI1GSJTSpcKHBWATjKgEu18Lv6tcphGQYykK/tpp51KDl+hw2rDTRyVyL+7K9YvjIFI8Q+RJojQwIrBsfNWRZnh7qCgaEyfYAmQKWwCHIolBuSRiRFEBDOQS+wO8ShHyY5L9QzdyeRxGLp8x8hQY0QkSeq3wAZWQDm/cYq6PuC25RhFNCWRsSNmiG5Eu4UJih4jPuhDpNXaJj4rnk4iRgIg9jLw8JpC//EMGcmmQI+OrOCVTblMbXn9CskYnyuITKmyssJfS9CUQCRw1IgcacvAOH7c9WDQrbyZ1dXtgJ8NE9nTovFvonAiqSDBDg9Quf0gVcaqNsHmY9dGWg/yxg/SxFn9fgQ7pZ/zHFcDNAeRjlLwr6PudVRT5J136kbXF5aooi3xxc+BFviBfRrvS2yoXtxcuTh6uXNyv9Nmz0j8Dpd9RibijEHHycCXifqXnz0r/DJR+VxH75NYq9pFF7Huj6MsYJA/T25Y0CoJhF0X/SVEVcXSKk+MiqfiSI+nw2b4+A/uit0QIofi7iszAkJRJDZX8ol8lW8I3qCbD1xDkbcmtSosSYCaVsRxmic//DmzsgVgKK3lW/O+veFQM8GWmNUZlIaJ2n1UkkoKs5UK4LNOZ6Kr62LNkcAgo/Qpsa3T4YPHDdU6e8Vnnv7/OqUx0Wynx5PZa4sOlRIS67aeG4dvi7m/Pvvs/UEsBAhQAFAAAAAgAwlo2WL4UTrEvBQAAgCYAABcAAAAAAAAAAAAAAAAAAAAAAGdlb2dlYnJhX2RlZmF1bHRzMmQueG1sUEsBAhQAFAAAAAgAwlo2WChQ7xR0AwAAWxEAABcAAAAAAAAAAAAAAAAAZAUAAGdlb2dlYnJhX2RlZmF1bHRzM2QueG1sUEsBAhQAFAAAAAgAwlo2WNY3vbkZAAAAFwAAABYAAAAAAAAAAAAAAAAADQkAAGdlb2dlYnJhX2phdmFzY3JpcHQuanNQSwECFAAUAAAACADCWjZYPHaibCILAABXNwAADAAAAAAAAAAAAAAAAABaCQAAZ2VvZ2VicmEueG1sUEsFBgAAAAAEAAQACAEAAKYUAAAAAA==</div><p>如图为第一组相似$\triangle MAN\sim \triangle MHB$</p><div id="ggb4" style="height:600px; width:800px; font-size:0">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</div><p>如图为第二组相似$\triangle MAN\sim \triangle AHN$</p><script src="https://cdn.geogebra.org/apps/deployggb.js"></script><script src="https://kz16.top/geogebra/ggbmd.js"></script> ]]></content>
    
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在c++中实现高精度</title>
    <link href="/2023/11/27/%E5%9C%A8c-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    <url>/2023/11/27/%E5%9C%A8c-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E9%AB%98%E7%B2%BE%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="实现高精度整数运算的C-类"><a href="#实现高精度整数运算的C-类" class="headerlink" title="实现高精度整数运算的C++类"></a>实现高精度整数运算的C++类</h1><p>在某些应用中，我们可能需要处理超出基本整数范围的大整数，例如对于极大的数值计算或密码学应用。在C++中，我们可以实现一个高精度整数类，允许我们执行大整数的基本运算。本文将介绍如何使用C++创建这样一个类，并实现加法、减法、乘法和除法。</p><h2 id="1-大整数类的设计"><a href="#1-大整数类的设计" class="headerlink" title="1. 大整数类的设计"></a>1. 大整数类的设计</h2><p>我们将创建一个<code>BigInteger</code>类，它内部使用一个<code>vector&lt;int&gt;</code>来存储大整数的各个位数。以下是基本设计：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdexcept&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BigInteger</span> &#123;<br><span class="hljs-keyword">private</span>:<br>    vector&lt;<span class="hljs-type">int</span>&gt; digits;<br><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-comment">// 构造函数、打印函数等基本成员函数...</span><br><br>    <span class="hljs-comment">// 大整数加法</span><br>    BigInteger <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span>;<br><br>    <span class="hljs-comment">// 大整数减法</span><br>    BigInteger <span class="hljs-keyword">operator</span>-(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span>;<br><br>    <span class="hljs-comment">// 大整数乘法</span><br>    BigInteger <span class="hljs-keyword">operator</span>*(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span>;<br><br>    <span class="hljs-comment">// 大整数除法</span><br>    BigInteger <span class="hljs-keyword">operator</span>/(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span>;<br><br>    <span class="hljs-comment">// 比较函数、零判断函数等辅助函数...</span><br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="2-构造函数和打印函数"><a href="#2-构造函数和打印函数" class="headerlink" title="2. 构造函数和打印函数"></a>2. 构造函数和打印函数</h2><p>首先，我们通过构造函数将字符串表示的数字转换为<code>BigInteger</code>对象，并提供一个打印函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">BigInteger</span>(string numStr) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">isValidNumber</span>(numStr)) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-built_in">invalid_argument</span>(<span class="hljs-string">&quot;Invalid number format&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = numStr.<span class="hljs-built_in">length</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        digits.<span class="hljs-built_in">push_back</span>(numStr[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> <span class="hljs-type">const</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = digits.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        cout &lt;&lt; digits[i];<br>    &#125;<br>    cout &lt;&lt; endl;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-加法运算"><a href="#3-加法运算" class="headerlink" title="3. 加法运算"></a>3. 加法运算</h2><p>加法运算实现了两个<code>BigInteger</code>对象之间的加法操作：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp">BigInteger <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        BigInteger result;<br>        <span class="hljs-type">int</span> carry = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">while</span> (i &lt; digits.<span class="hljs-built_in">size</span>() || i &lt; other.digits.<span class="hljs-built_in">size</span>() || carry) &#123;<br>            <span class="hljs-type">int</span> sum = carry;<br>            <span class="hljs-keyword">if</span> (i &lt; digits.<span class="hljs-built_in">size</span>()) sum += digits[i];<br>            <span class="hljs-keyword">if</span> (i &lt; other.digits.<span class="hljs-built_in">size</span>()) sum += other.digits[i];<br><br>            result.digits.<span class="hljs-built_in">push_back</span>(sum % <span class="hljs-number">10</span>);<br>            carry = sum / <span class="hljs-number">10</span>;<br><br>            i++;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="4-减法运算"><a href="#4-减法运算" class="headerlink" title="4. 减法运算"></a>4. 减法运算</h2><p>减法运算实现了两个<code>BigInteger</code>对象之间的减法操作，并处理负数情况：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp">BigInteger <span class="hljs-keyword">operator</span>-(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        <span class="hljs-keyword">if</span> (*<span class="hljs-keyword">this</span> &lt; other) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-built_in">invalid_argument</span>(<span class="hljs-string">&quot;Result is negative, subtraction not supported&quot;</span>);<br>        &#125;<br><br>        BigInteger result;<br>        <span class="hljs-type">int</span> borrow = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">while</span> (i &lt; digits.<span class="hljs-built_in">size</span>() || i &lt; other.digits.<span class="hljs-built_in">size</span>()) &#123;<br>            <span class="hljs-type">int</span> diff = borrow;<br>            <span class="hljs-keyword">if</span> (i &lt; digits.<span class="hljs-built_in">size</span>()) diff += digits[i];<br>            <span class="hljs-keyword">if</span> (i &lt; other.digits.<span class="hljs-built_in">size</span>()) diff -= other.digits[i];<br><br>            <span class="hljs-keyword">if</span> (diff &lt; <span class="hljs-number">0</span>) &#123;<br>                diff += <span class="hljs-number">10</span>;<br>                borrow = <span class="hljs-number">-1</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                borrow = <span class="hljs-number">0</span>;<br>            &#125;<br><br>            result.digits.<span class="hljs-built_in">push_back</span>(diff);<br><br>            i++;<br>        &#125;<br><br>        <span class="hljs-comment">// 移除前导零</span><br>        <span class="hljs-keyword">while</span> (!result.digits.<span class="hljs-built_in">empty</span>() &amp;&amp; result.digits.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) &#123;<br>            result.digits.<span class="hljs-built_in">pop_back</span>();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="5-乘法运算"><a href="#5-乘法运算" class="headerlink" title="5. 乘法运算"></a>5. 乘法运算</h2><p>乘法运算实现了两个<code>BigInteger</code>对象之间的乘法操作：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp">BigInteger <span class="hljs-keyword">operator</span>*(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        BigInteger result;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; digits.<span class="hljs-built_in">size</span>(); i++) &#123;<br>            <span class="hljs-type">int</span> carry = <span class="hljs-number">0</span>;<br>            BigInteger temp;<br><br>            <span class="hljs-comment">// 在乘法中，每一位和另一个数相乘，并且结果向左移动一位</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; i; j++) &#123;<br>                temp.digits.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<br>            &#125;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; other.digits.<span class="hljs-built_in">size</span>() || carry; j++) &#123;<br>                <span class="hljs-type">int</span> product = carry;<br>                <span class="hljs-keyword">if</span> (j &lt; other.digits.<span class="hljs-built_in">size</span>()) product += digits[i] * other.digits[j];<br><br>                temp.digits.<span class="hljs-built_in">push_back</span>(product % <span class="hljs-number">10</span>);<br>                carry = product / <span class="hljs-number">10</span>;<br>            &#125;<br><br>            result = result + temp;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="6-除法运算"><a href="#6-除法运算" class="headerlink" title="6. 除法运算"></a>6. 除法运算</h2><p>除法运算实现了两个<code>BigInteger</code>对象之间的除法操作，并处理除数为零的情况：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp">BigInteger <span class="hljs-keyword">operator</span>/(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        <span class="hljs-keyword">if</span> (other.<span class="hljs-built_in">isZero</span>()) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-built_in">invalid_argument</span>(<span class="hljs-string">&quot;Division by zero&quot;</span>);<br>        &#125;<br><br>        BigInteger result;<br>        BigInteger currentDividend;<br>        <span class="hljs-type">int</span> currentIndex = digits.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">while</span> (currentIndex &gt;= <span class="hljs-number">0</span>) &#123;<br>            currentDividend.digits.<span class="hljs-built_in">insert</span>(currentDividend.digits.<span class="hljs-built_in">begin</span>(), digits[currentIndex]);<br><br>            <span class="hljs-type">int</span> quotient = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (currentDividend &gt;= other) &#123;<br>                currentDividend = currentDividend - other;<br>                quotient++;<br>            &#125;<br><br>            result.digits.<span class="hljs-built_in">insert</span>(result.digits.<span class="hljs-built_in">begin</span>(), quotient);<br><br>            currentIndex--;<br>        &#125;<br><br>        <span class="hljs-comment">// 移除前导零</span><br>        <span class="hljs-keyword">while</span> (!result.digits.<span class="hljs-built_in">empty</span>() &amp;&amp; result.digits.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) &#123;<br>            result.digits.<span class="hljs-built_in">pop_back</span>();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="7-其他辅助函数"><a href="#7-其他辅助函数" class="headerlink" title="7. 其他辅助函数"></a>7. 其他辅助函数</h2><p>在实际应用中，我们可能还需要其他辅助函数，比如判断是否为零、比较大小等函数。这些函数应该根据实际需要进行实现。</p><h2 id="8-示例用法"><a href="#8-示例用法" class="headerlink" title="8. 示例用法"></a>8. 示例用法</h2><p>最后，我们在<code>main</code>函数中展示了<code>BigInteger</code>类的一些基本用法，包括加法、减法、乘法和除法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">// 示例用法</span><br>        <span class="hljs-function">BigInteger <span class="hljs-title">num1</span><span class="hljs-params">(<span class="hljs-string">&quot;12345678901234567890&quot;</span>)</span></span>;<br>        <span class="hljs-function">BigInteger <span class="hljs-title">num2</span><span class="hljs-params">(<span class="hljs-string">&quot;98765432109876543210&quot;</span>)</span></span>;<br><br>        cout &lt;&lt; <span class="hljs-string">&quot;num1: &quot;</span>;<br>        num1.<span class="hljs-built_in">print</span>();<br><br>        cout &lt;&lt; <span class="hljs-string">&quot;num2: &quot;</span>;<br>        num2.<span class="hljs-built_in">print</span>();<br><br>        BigInteger sum = num1 + num2;<br>        cout &lt;&lt; <span class="hljs-string">&quot;Sum: &quot;</span>;<br>        sum.<span class="hljs-built_in">print</span>();<br><br>        BigInteger difference = num1 - num2;<br>        cout &lt;&lt; <span class="hljs-string">&quot;Difference: &quot;</span>;<br>        difference.<span class="hljs-built_in">print</span>();<br><br>        BigInteger product = num1 * num2;<br>        cout &lt;&lt; <span class="hljs-string">&quot;Product: &quot;</span>;<br>        product.<span class="hljs-built_in">print</span>();<br><br>        BigInteger quotient = num1 / num2;<br>        cout &lt;&lt; <span class="hljs-string">&quot;Quotient: &quot;</span>;<br>        quotient.<span class="hljs-built_in">print</span>();<br>    &#125; <span class="hljs-built_in">catch</span> (<span class="hljs-type">const</span> exception &amp;e) &#123;<br>        cerr &lt;&lt; <span class="hljs-string">&quot;Error: &quot;</span> &lt;&lt; e.<span class="hljs-built_in">what</span>() &lt;&lt; endl;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>通过实现这个<code>BigInteger</code>类，我们能够在C++中处理大整数运算，从而满足一些特定应用的需求。在实际应用中，可能需要根据具体情况进行性能优化和错误处理。</p><h2 id="附上完整代码："><a href="#附上完整代码：" class="headerlink" title="附上完整代码："></a>附上完整代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdexcept&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BigInteger</span> &#123;<br><span class="hljs-keyword">private</span>:<br>    vector&lt;<span class="hljs-type">int</span>&gt; digits;<br><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-comment">// 构造函数，接受字符串表示的数字</span><br>    <span class="hljs-built_in">BigInteger</span>(string numStr) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">isValidNumber</span>(numStr)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-built_in">invalid_argument</span>(<span class="hljs-string">&quot;Invalid number format&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = numStr.<span class="hljs-built_in">length</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>            digits.<span class="hljs-built_in">push_back</span>(numStr[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 打印大整数</span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> <span class="hljs-type">const</span> </span>&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = digits.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>            cout &lt;&lt; digits[i];<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br><br>    <span class="hljs-comment">// 判断输入的数字是否合法</span><br>    <span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">bool</span> <span class="hljs-title">isValidNumber</span><span class="hljs-params">(<span class="hljs-type">const</span> string &amp;numStr)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> digit : numStr) &#123;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">isdigit</span>(digit)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// 大整数加法</span><br>    BigInteger <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        BigInteger result;<br>        <span class="hljs-type">int</span> carry = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">while</span> (i &lt; digits.<span class="hljs-built_in">size</span>() || i &lt; other.digits.<span class="hljs-built_in">size</span>() || carry) &#123;<br>            <span class="hljs-type">int</span> sum = carry;<br>            <span class="hljs-keyword">if</span> (i &lt; digits.<span class="hljs-built_in">size</span>()) sum += digits[i];<br>            <span class="hljs-keyword">if</span> (i &lt; other.digits.<span class="hljs-built_in">size</span>()) sum += other.digits[i];<br><br>            result.digits.<span class="hljs-built_in">push_back</span>(sum % <span class="hljs-number">10</span>);<br>            carry = sum / <span class="hljs-number">10</span>;<br><br>            i++;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-comment">// 大整数减法</span><br>    BigInteger <span class="hljs-keyword">operator</span>-(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        <span class="hljs-keyword">if</span> (*<span class="hljs-keyword">this</span> &lt; other) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-built_in">invalid_argument</span>(<span class="hljs-string">&quot;Result is negative, subtraction not supported&quot;</span>);<br>        &#125;<br><br>        BigInteger result;<br>        <span class="hljs-type">int</span> borrow = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">while</span> (i &lt; digits.<span class="hljs-built_in">size</span>() || i &lt; other.digits.<span class="hljs-built_in">size</span>()) &#123;<br>            <span class="hljs-type">int</span> diff = borrow;<br>            <span class="hljs-keyword">if</span> (i &lt; digits.<span class="hljs-built_in">size</span>()) diff += digits[i];<br>            <span class="hljs-keyword">if</span> (i &lt; other.digits.<span class="hljs-built_in">size</span>()) diff -= other.digits[i];<br><br>            <span class="hljs-keyword">if</span> (diff &lt; <span class="hljs-number">0</span>) &#123;<br>                diff += <span class="hljs-number">10</span>;<br>                borrow = <span class="hljs-number">-1</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                borrow = <span class="hljs-number">0</span>;<br>            &#125;<br><br>            result.digits.<span class="hljs-built_in">push_back</span>(diff);<br><br>            i++;<br>        &#125;<br><br>        <span class="hljs-comment">// 移除前导零</span><br>        <span class="hljs-keyword">while</span> (!result.digits.<span class="hljs-built_in">empty</span>() &amp;&amp; result.digits.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) &#123;<br>            result.digits.<span class="hljs-built_in">pop_back</span>();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-comment">// 大整数乘法</span><br>    BigInteger <span class="hljs-keyword">operator</span>*(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        BigInteger result;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; digits.<span class="hljs-built_in">size</span>(); i++) &#123;<br>            <span class="hljs-type">int</span> carry = <span class="hljs-number">0</span>;<br>            BigInteger temp;<br><br>            <span class="hljs-comment">// 在乘法中，每一位和另一个数相乘，并且结果向左移动一位</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; i; j++) &#123;<br>                temp.digits.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<br>            &#125;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; other.digits.<span class="hljs-built_in">size</span>() || carry; j++) &#123;<br>                <span class="hljs-type">int</span> product = carry;<br>                <span class="hljs-keyword">if</span> (j &lt; other.digits.<span class="hljs-built_in">size</span>()) product += digits[i] * other.digits[j];<br><br>                temp.digits.<span class="hljs-built_in">push_back</span>(product % <span class="hljs-number">10</span>);<br>                carry = product / <span class="hljs-number">10</span>;<br>            &#125;<br><br>            result = result + temp;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-comment">// 大整数除法</span><br>    BigInteger <span class="hljs-keyword">operator</span>/(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        <span class="hljs-keyword">if</span> (other.<span class="hljs-built_in">isZero</span>()) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-built_in">invalid_argument</span>(<span class="hljs-string">&quot;Division by zero&quot;</span>);<br>        &#125;<br><br>        BigInteger result;<br>        BigInteger currentDividend;<br>        <span class="hljs-type">int</span> currentIndex = digits.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">while</span> (currentIndex &gt;= <span class="hljs-number">0</span>) &#123;<br>            currentDividend.digits.<span class="hljs-built_in">insert</span>(currentDividend.digits.<span class="hljs-built_in">begin</span>(), digits[currentIndex]);<br><br>            <span class="hljs-type">int</span> quotient = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (currentDividend &gt;= other) &#123;<br>                currentDividend = currentDividend - other;<br>                quotient++;<br>            &#125;<br><br>            result.digits.<span class="hljs-built_in">insert</span>(result.digits.<span class="hljs-built_in">begin</span>(), quotient);<br><br>            currentIndex--;<br>        &#125;<br><br>        <span class="hljs-comment">// 移除前导零</span><br>        <span class="hljs-keyword">while</span> (!result.digits.<span class="hljs-built_in">empty</span>() &amp;&amp; result.digits.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) &#123;<br>            result.digits.<span class="hljs-built_in">pop_back</span>();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-comment">// 判断是否为零</span><br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isZero</span><span class="hljs-params">()</span> <span class="hljs-type">const</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> digits.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span> || (digits.<span class="hljs-built_in">size</span>() == <span class="hljs-number">1</span> &amp;&amp; digits[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 比较两个大整数的大小</span><br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-type">const</span> BigInteger &amp;other) <span class="hljs-type">const</span> &#123;<br>        <span class="hljs-keyword">if</span> (digits.<span class="hljs-built_in">size</span>() &lt; other.digits.<span class="hljs-built_in">size</span>()) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (digits.<span class="hljs-built_in">size</span>() &gt; other.digits.<span class="hljs-built_in">size</span>()) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = digits.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>            <span class="hljs-keyword">if</span> (digits[i] &lt; other.digits[i]) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span> (digits[i] &gt; other.digits[i]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程|c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
